
#
# Mac
#
brew update
brew install pyenv
brew install pyenv-virtualenv
xcode-select --install
#
# Other
#
git clone https://github.com/pyenv/pyenv.git ~/.pyenv
git clone https://github.com/pyenv/pyenv-virtualenv.git \
    ~/.pyenv/plugins-virtualenv

echo ".python_version" >> ~/.gitignore_global

source ~/.bash_profile  # see dotfiles repo

pybase 3
pybase 2

# this doesn't work properly on Mac; use venvs and manual symlinks instead
#pyenv deactivate
#pip3 install virtualenv
#curl https://raw.githubusercontent.com/mitsuhiko/pipsi/master/get-pipsi.py | python3

# consider removing these from the main system:
#autopep8
#flake8

py3ver=$(py3latest_local)
py2ver=$(py2latest_local)
#
# see dot.bashrc.d/python.post for pyinst
pyinst coverage "$py3ver"
pyinst flake8 "$py3ver"
pyinst nose "$py3ver"
pyinst pytest "$py3ver"
pyinst sphinx "$py2ver"
pyinst tox "$py3ver"
#
pyenv activate "flake8-$py3ver"
pip3 install autopep8 flake8-import-order
pyenv activate "pytest-$py3ver"
pip3 install pytest-asyncio pytest-catchlog pytest-cov pytest-mock
pyenv activate "sphinx-$py2ver"
pip2 install recommonmark repoze.sphinx.autointerface sphinx-autobuild
pip2 install sphinxcontrib-zopeext zope.interface
pyenv deactivate
#
# pyln defaults to ~/bin
pyln "coverage-${py3ver}" coverage-3.6
pyln "coverage-${py3ver}" coverage3
pyln "flake8-${py3ver}" autopep8
pyln "flake8-${py3ver}" pycodestyle
pyln "flake8-${py3ver}" pyflakes
pyln "nose-${py3ver}" nosetests
pyln "nose-${py3ver}" nosetests-3.4
pyln "pytest-${py3ver}" py.test
# more from sphinx?
pyln "sphinx-${py2ver}" sphinx-{apidoc,autobuild,autogen,build,quickstart}
pyln "tox-${py3ver}" tox-quickstart
rm ~/bin/{nose,sphinx}  # don't actually exist
cd

cat >> ~/.flake8 <<EOF
[flake8]
import-order-style = edited
EOF

# I haven't figured out how to make new virtualenvs have new pip;
# pyenv global 3.6.5; pyenv deactivate; pip install --upgrade pip
# will update the base image, but that apparently won't affect the new ones.
# I thought the problem might be with ensurepip, but that doesn't seem to be it
# either.  For the moment, to upgrade all of them:
for i in `pyenv versions | grep '/envs/' | sed 's/^..//' | sed 's/ (.*//'`; do
    echo "*** $i ***"; pyenv activate $i; pip install --upgrade pip
done
pyenv deactivate

# Tox seems to look directly in virtualenvs' bin directories, and requires a
# minor-versioned python binary (e.g. python3.6), which the above doesn't seem
# to provide (at least for python3), so:
for i in ~/.pyenv/versions/*/lib/python*.*; do
    major=$(printf "%s\n" "$i" | sed 's/^.*\([0-9]\)\.[0-9]$/\1/')
    majorminor=$(printf "%s\n" "$i" | sed 's/^.*\([0-9]\.[0-9]\)$/\1/')
    cd $i/../../bin
    ln -s "python$major" "python$majorminor"
done
cd
